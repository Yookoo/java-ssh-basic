<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- 加载jdbc属性文件  -->
	
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!-- 配置连接池  -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="user" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	
	<!-- spring框架用于整合Hibernate的工厂bean -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- 注入Hibernate相关的属性 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<!-- 注入Hibernate的映射文件 -->
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:com/bos/bussiness/domain</value>
			</list>
		</property>
	</bean>
	 <!-- class=""  -->
	<!-- 事务管理器 -->
	<bean id="transactionManager2"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 组件扫描 -->
	<context:component-scan base-package="com.bos"/>
	<!-- 引入注解解析器 -->
	<context:annotation-config/>
	<!-- 事务注解 -->
	<tx:annotation-driven />
	
	<!-- 配置服务器代理对象 -->
	<bean id="customerService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
		<property name="serviceInterface" value="cn.itcast.crm.sevice.CustomerService"/>
		<property name="serviceUrl" value="http://localhost:8088/remoting/customer"/>
	</bean>
	<!-- shiroFilter配置 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
          <!-- 注入安全管理器 -->
		<property name="securityManager" ref="securityManager"></property>
		<!-- 注入当前系统的登录页面 -->
		<property name="loginUrl" value="/login.jsp"/>
		<!-- 注入成功页面 -->
		<property name="successUrl" value="/index.jsp"/>
		<!-- 注入权限不足提示页面 -->
		<property name="unauthorizedUrl" value="/unauthorizedUrl.jsp"/>

         <property name="filterChainDefinitions">  
              <value>  
                /css/** = anon
				/images/** = anon
				/js/** = anon
				/login.jsp* = anon
				/validatecode.jsp* = anon
				/userAction_login.action = anon
				/page_base_staff.action = perms["staff"]
				/* = authc 
              </value>  
          </property>  
  	</bean>
  	<!-- 注册自定义realm -->
	<bean id="bosRealm" class="com.bos.shiro.BOSRealm"></bean>
	<!-- 注册缓存管理器 -->
	<bean id="ehcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml"></property>
	</bean>
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- 注入上面的realm -->
		<property name="realm" ref="bosRealm"/>
		<property name="cacheManager" ref="ehcacheManager"></property>
	</bean>
  	
  	<!-- 开启shiro注解 -->
  	<bean id="defaultAdvisorAutoproxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
  		<property name="proxyTargetClass" value="true"></property>
  	</bean>
  	<!-- 切面类   -->
  	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"/> 
  	
  	<!-- activiti -->
  	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 注入事务管理器对象 -->
		<property name="transactionManager" ref="transactionManager"/>
		<property name="databaseSchemaUpdate" value="true" />
	</bean>

	<!-- 使用工厂创建流程引擎对象 -->
	<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
		<property name="processEngineConfiguration" ref="processEngineConfiguration" />
	</bean>
	
	<!-- 注册Service -->
	<bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService">
	</bean>
	<bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService">
	</bean>
	<bean id="taskService" factory-bean="processEngine" factory-method="getTaskService">
	</bean>
	<bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService">
	</bean> 	
</beans>
